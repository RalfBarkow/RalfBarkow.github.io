{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome This is the GitHub Pages' user site of Ralf Barkow. The following is an overview of the 4 main projects I am working on. Actually there are 5 projects. 5 fingers of one hand Zettelkasten DMX Platform dmx-zettelkasten plugin Combine these 3 to 1 Freedombox App How to set-up all this (see next section)","title":"Home"},{"location":"#welcome","text":"This is the GitHub Pages' user site of Ralf Barkow. The following is an overview of the 4 main projects I am working on. Actually there are 5 projects.","title":"Welcome"},{"location":"#5-fingers-of-one-hand","text":"Zettelkasten DMX Platform dmx-zettelkasten plugin Combine these 3 to 1 Freedombox App How to set-up all this (see next section)","title":"5 fingers of one hand"},{"location":"iirds/","text":"iiRDS Specification First Public Working Draft, 03 April 2017 intelligent information Request and Delivery Standard Lightweight DITA: An Introduction Working Draft 11 Lightweight DITA (LwDITA) is a simplified version of DITA that is designed to ease adoption and implementation of DITA by reducing its dependence on robust XML structures and allowing authors to develop and share content in a variety of markup languages, which include HTL5 and Markdown. LwDITA provides a subset of the functionality of the full DITA standard. It has a limited element and attribute set and stricter content models. The DITA RDF project","title":"iiRDS Specification"},{"location":"iirds/#iirds-specification","text":"","title":"iiRDS Specification"},{"location":"iirds/#first-public-working-draft-03-april-2017","text":"intelligent information Request and Delivery Standard","title":"First Public Working Draft, 03 April 2017"},{"location":"iirds/#lightweight-dita-an-introduction","text":"","title":"Lightweight DITA: An Introduction"},{"location":"iirds/#working-draft-11","text":"Lightweight DITA (LwDITA) is a simplified version of DITA that is designed to ease adoption and implementation of DITA by reducing its dependence on robust XML structures and allowing authors to develop and share content in a variety of markup languages, which include HTL5 and Markdown. LwDITA provides a subset of the functionality of the full DITA standard. It has a limited element and attribute set and stricter content models.","title":"Working Draft 11"},{"location":"iirds/#the-dita-rdf-project","text":"","title":"The DITA RDF project"},{"location":"test/","text":"\u00dcberschrift erster Ebene \u00dcberschrift 2. Ebene function someCode(){ } * Eine Aufz\u00e4hlung Der Text ist kursiv , dieser fett \u200b |Kopfzeile|Kopfzeile| |---|---| |Zelle|Zelle|","title":"\u00dcberschrift erster Ebene"},{"location":"test/#uberschrift-erster-ebene","text":"","title":"\u00dcberschrift erster Ebene"},{"location":"test/#uberschrift-2-ebene","text":"function someCode(){ } * Eine Aufz\u00e4hlung Der Text ist kursiv , dieser fett \u200b |Kopfzeile|Kopfzeile| |---|---| |Zelle|Zelle|","title":"\u00dcberschrift 2. Ebene"},{"location":"projects/","text":"Overview projects: * Zettelkasten * dmx-zettelkasten * FreedomBox Service (Plinth)","title":"Overview"},{"location":"prometheus/prometheus/","text":"What is Prometheus? https://www.metricfire.com/blog/prometheus-vs-elk/ https://cdn.buttercms.com/QdGh22tT2qHcs8PjZvYU","title":"Prometheus"},{"location":"user-guide/getting-started/","text":"Get started Read Mahn, J. (2020) Doku-Freuden (in German). (I'm changing my GitHub Pages' user site to MkDocs.) pyenv version $ pyenv version 3 .8.5 pip install mkdocs To use the popular Material theme, load this too via pip: pip install mkdocs-material Pack everything into a container Put the entire documentation into a container to be sure that the software will find identical conditions on all developer machines and on the server \u2013 identical dependencies, MkDocs plug-ins and Python versions for example. Build a multistage image Read Mahn, J. (2019) Raketenstufenbau (in German). Deploy the docs Regarding Organization and User Pages, the mkdocs documentation recommends to work with copies of 2 repositories on our local system. For example, consider the following file structure: my-project/ mkdocs.yml docs/ orgname.github.io/ After making and verifying updates to your project you need to change directories to the orgname.github.io repository and call the mkdocs gh-deploy command from there: cd ../orgname.github.io/ mkdocs gh-deploy --config-file ../my-project/mkdocs.yml --remote-branch master Deviating from this, I want to work with only one repository, as described by Jan Mahn. cd RalfBarkow.github.io mkdocs gh-deploy --config-file container/mkdocs/mkdocs.yml --remote-branch master","title":"Set-up"},{"location":"user-guide/getting-started/#get-started","text":"Read Mahn, J. (2020) Doku-Freuden (in German). (I'm changing my GitHub Pages' user site to MkDocs.) pyenv version $ pyenv version 3 .8.5 pip install mkdocs To use the popular Material theme, load this too via pip: pip install mkdocs-material","title":"Get started"},{"location":"user-guide/getting-started/#pack-everything-into-a-container","text":"Put the entire documentation into a container to be sure that the software will find identical conditions on all developer machines and on the server \u2013 identical dependencies, MkDocs plug-ins and Python versions for example.","title":"Pack everything into a container"},{"location":"user-guide/getting-started/#build-a-multistage-image","text":"Read Mahn, J. (2019) Raketenstufenbau (in German).","title":"Build a multistage image"},{"location":"user-guide/getting-started/#deploy-the-docs","text":"Regarding Organization and User Pages, the mkdocs documentation recommends to work with copies of 2 repositories on our local system. For example, consider the following file structure: my-project/ mkdocs.yml docs/ orgname.github.io/ After making and verifying updates to your project you need to change directories to the orgname.github.io repository and call the mkdocs gh-deploy command from there: cd ../orgname.github.io/ mkdocs gh-deploy --config-file ../my-project/mkdocs.yml --remote-branch master Deviating from this, I want to work with only one repository, as described by Jan Mahn. cd RalfBarkow.github.io mkdocs gh-deploy --config-file container/mkdocs/mkdocs.yml --remote-branch master","title":"Deploy the docs"}]}